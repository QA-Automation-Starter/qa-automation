# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: snapshot build and publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build-for-future-jdks:
    name: jdk-${{ matrix.java-version }} build w/o tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 17, 11 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: maven
          settings-path: ${{ github.workspace }}

      - run: chmod +x mvnw
      - run: |
          ./mvnw clean install \
            -DskipTests=true \
            -s $GITHUB_WORKSPACE/settings.xml \
            -Pmode-build-fast,mode-build-quiet

  deploy-for-jdk8:
    name: jdk-8 snapshot publish
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          settings-path: ${{ github.workspace }}
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - run: chmod +x mvnw
      - run: |
          ./mvnw clean deploy site site:stage scm-publish:publish-scm \
            -s $GITHUB_WORKSPACE/settings.xml \
            -Pmode-build-quiet
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

  generate-automation-project:
    name: Generates new automation project and builds it
    needs: deploy-for-jdk8
    runs-on: ubuntu-latest

    steps:
      - name: setup maven for sonatype snapshots
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: >
            [
              {
                "id": "ossrh",
                "url": "https://s01.oss.sonatype.org/content/repositories/snapshots",
                "snapshots": {
                    "enabled": "true",
                    "checksumPolicy": "warn"
                }
              }
            ]

      # FIXME should run with controlled java version
      - name: bootstrap maven
        uses: aahmed-se/setup-maven@v3
        with:
          maven-version: 3.6.1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: setup maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: generate testing project
        # IMPORTANT
        run: |
          mvn --batch-mode archetype:generate \
            -DarchetypeGroupId=dev.aherscu.qa \
            -DarchetypeArtifactId=qa-testing-archetype \
            -DarchetypeVersion=0.0.2-SNAPSHOT \
            -DgroupId=com.acme \
            -DartifactId=testing \
            -Dversion=1.0-SNAPSHOT \
            -Dpackage=com.acme.testing

      - name: build testing project
        run: cd testing && chmod +x mvnw && ./mvnw
