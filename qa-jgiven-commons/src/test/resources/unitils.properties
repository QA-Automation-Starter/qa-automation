#
# Copyright 2022 Adrian Herscu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
unitils.module.dbunit.className                            =dev.aherscu.qa.jgiven.commons.utils.DbUnitExModule
unitils.module.database.className                          =dev.aherscu.qa.jgiven.commons.utils.DatabaseModuleEx

DbUnitModule.DataSet.loadStrategy.default                  =dev.aherscu.qa.jgiven.commons.utils.CleanInsertLoadStrategyEx

# ISSUE current release of unitils (3.4.6) does not support initialization of
# multiple databases --
# see https://github.com/QA-Automation-Starter/qa-automation/issues/209
# Unitils allows specifying multiple databases, but their initialization,
# as done via DBMaintainer module, does not recognize this.
database.names                                             =db1

database.schemaNames.db1                                   =APP
database.driverClassName.db1                               =org.apache.derby.iapi.jdbc.AutoloadedDriver
database.dialect.db1                                       =derby
database.url.db1                                           =jdbc:derby:memory:db1;create=true

#database.schemaNames.db2                                   =APP
#database.driverClassName.db2                               =org.apache.derby.iapi.jdbc.AutoloadedDriver
#database.dialect.db2                                       =derby
#database.url.db2                                           =jdbc:derby:memory:db2;create=true

# Allow reading file contents from SQL files
IOModule.conversion.custom                                 =dev.aherscu.qa.jgiven.commons.utils.SqlConversionStrategy

# Use custom pooling data source
org.unitils.database.config.DataSourceFactory.implClassName=dev.aherscu.qa.jgiven.commons.utils.HikariPoolingDataSourceFactory

updateDataBaseSchema.enabled                               =true
dbMaintainer.generateDataSetStructure.enabled              =false
dbMaintainer.autoCreateExecutedScriptsTable                =true
dbMaintainer.script.locations                              =src/test/resources/dev/aherscu/qa/jgiven/commons/utils
