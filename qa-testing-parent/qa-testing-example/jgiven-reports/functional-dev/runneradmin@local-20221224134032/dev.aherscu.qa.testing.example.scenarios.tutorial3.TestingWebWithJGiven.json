{
  "className": "dev.aherscu.qa.testing.example.scenarios.tutorial3.TestingWebWithJGiven",
  "name": "Testing Web With J Given",
  "scenarios": [
    {
      "className": "dev.aherscu.qa.testing.example.scenarios.tutorial3.TestingWebWithJGiven",
      "testMethodName": "shouldFind",
      "description": "Should find",
      "tagIds": [
        "dev.aherscu.qa.jgiven.commons.tags.UITest",
        "dev.aherscu.qa.jgiven.commons.tags.Reference-68",
        "DeviceName",
        "PlatformName",
        "PlatformVersion"
      ],
      "explicitParameters": [
        "textToSearch",
        "titleRule"
      ],
      "derivedParameters": [
        "driver",
        "textToSearch",
        "titleRule"
      ],
      "casesAsTable": true,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "google",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "google"
                },
                {
                  "value": "WebDriverEx(originalCapabilities\u003dCapabilities {class: org.openqa.selenium.chrome...., goog:chromeOptions: {w3c: false}, name: TestingWebWithJGiven:should..., type: web}, driver\u003dChromeDriver: chrome on WINDOWS (43ac91d596b87eb1a0bedf4e8c5bdafd))",
                  "argumentInfo": {
                    "parameterName": "driver",
                    "argumentName": "driver",
                    "formattedValue": "WebDriverEx(originalCapabilities\u003dCapabilities {class: org.openqa.selenium.chrome...., goog:chromeOptions: {w3c: false}, name: TestingWebWithJGiven:should..., type: web}, driver\u003dChromeDriver: chrome on WINDOWS (43ac91d596b87eb1a0bedf4e8c5bdafd))"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1315754500,
              "attachments": [
                {
                  "value": "{class\u003dorg.openqa.selenium.chrome.ChromeDriver, goog:chromeOptions\u003d{w3c\u003dfalse}, name\u003dTestingWebWithJGiven:shouldFind:d899e6a0:1:1671889633049, type\u003dweb}",
                  "mediaType": "text/plain",
                  "binary": false
                }
              ],
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "searching for",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "searching for"
                },
                {
                  "value": "QYk7ulYUSwToY4PBPrPaRdkEMS9kEGeK7pWumjYh",
                  "argumentInfo": {
                    "parameterName": "textToSearch",
                    "argumentName": "something",
                    "formattedValue": "QYk7ulYUSwToY4PBPrPaRdkEMS9kEGeK7pWumjYh"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1646058100,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "the results",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the results"
                },
                {
                  "value": "contains \u003c0L\u003e items",
                  "argumentInfo": {
                    "parameterName": "titleRule",
                    "argumentName": "matcher",
                    "formattedValue": "contains \u003c0L\u003e items"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 785104500,
              "attachments": [
                {
                  "value": "\u003d\u003d",
                  "mediaType": "image/png",
                  "binary": true
                }
              ],
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [
            "QYk7ulYUSwToY4PBPrPaRdkEMS9kEGeK7pWumjYh",
            "contains \u003c0L\u003e items"
          ],
          "derivedArguments": [
            "WebDriverEx(originalCapabilities\u003dCapabilities {class: org.openqa.selenium.chrome...., goog:chromeOptions: {w3c: false}, name: TestingWebWithJGiven:should..., type: web}, driver\u003dChromeDriver: chrome on WINDOWS (43ac91d596b87eb1a0bedf4e8c5bdafd))",
            "QYk7ulYUSwToY4PBPrPaRdkEMS9kEGeK7pWumjYh",
            "contains \u003c0L\u003e items"
          ],
          "durationInNanos": 3854470600
        },
        {
          "caseNr": 2,
          "steps": [
            {
              "name": "google",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "google"
                },
                {
                  "value": "WebDriverEx(originalCapabilities\u003dCapabilities {class: org.openqa.selenium.firefox..., goog:chromeOptions: {w3c: false}, name: TestingWebWithJGiven:should..., type: web}, driver\u003dFirefoxDriver: firefox on WINDOWS (d08a5b6b-b456-487c-9f67-3f35553cc49b))",
                  "argumentInfo": {
                    "parameterName": "driver",
                    "argumentName": "driver",
                    "formattedValue": "WebDriverEx(originalCapabilities\u003dCapabilities {class: org.openqa.selenium.firefox..., goog:chromeOptions: {w3c: false}, name: TestingWebWithJGiven:should..., type: web}, driver\u003dFirefoxDriver: firefox on WINDOWS (d08a5b6b-b456-487c-9f67-3f35553cc49b))"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1550533800,
              "attachments": [
                {
                  "value": "{class\u003dorg.openqa.selenium.firefox.FirefoxDriver, goog:chromeOptions\u003d{w3c\u003dfalse}, name\u003dTestingWebWithJGiven:shouldFind:2444a9f0:1:1671889650527, type\u003dweb}",
                  "mediaType": "text/plain",
                  "binary": false
                }
              ],
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "searching for",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "searching for"
                },
                {
                  "value": "testng",
                  "argumentInfo": {
                    "parameterName": "textToSearch",
                    "argumentName": "something",
                    "formattedValue": "testng"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 243049100,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "the results",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the results"
                },
                {
                  "value": "All to match \u003ca string containing \"testng\" ignoring case\u003e",
                  "argumentInfo": {
                    "parameterName": "titleRule",
                    "argumentName": "matcher",
                    "formattedValue": "All to match \u003ca string containing \"testng\" ignoring case\u003e"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 584926400,
              "attachments": [
                {
                  "value": "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AIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgACAAPgSgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIAAiALwEIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgCs7P8B+EtEzQBSA70AAAAASUVORK5CYII\u003d",
                  "mediaType": "image/png",
                  "binary": true
                }
              ],
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [
            "testng",
            "All to match \u003ca string containing \"testng\" ignoring case\u003e"
          ],
          "derivedArguments": [
            "WebDriverEx(originalCapabilities\u003dCapabilities {class: org.openqa.selenium.firefox..., goog:chromeOptions: {w3c: false}, name: TestingWebWithJGiven:should..., type: web}, driver\u003dFirefoxDriver: firefox on WINDOWS (d08a5b6b-b456-487c-9f67-3f35553cc49b))",
            "testng",
            "All to match \u003ca string containing \"testng\" ignoring case\u003e"
          ],
          "durationInNanos": 2381984300
        }
      ],
      "durationInNanos": 6236454900
    }
  ],
  "tagMap": {
    "dev.aherscu.qa.jgiven.commons.tags.UITest": {
      "fullType": "dev.aherscu.qa.jgiven.commons.tags.UITest",
      "type": "UITest",
      "name": "UI Test",
      "description": "Tests interacting with user interface",
      "href": ""
    },
    "dev.aherscu.qa.jgiven.commons.tags.Reference-68": {
      "fullType": "dev.aherscu.qa.jgiven.commons.tags.Reference",
      "type": "Reference",
      "name": "Reference",
      "value": "68",
      "description": "\u003ca target\u003d\"_blank\" href\u003d\"https://github.com/QA-Automation-Starter/qa-automation/issues/68\"\u003eClick here to open ALM 68\u003c/a\u003e",
      "prependType": true,
      "style": "background-color: darkgreen; color: white; font-weight: bold",
      "href": "https://github.com/QA-Automation-Starter/qa-automation/issues/68"
    },
    "DeviceName": {
      "fullType": "DeviceName",
      "name": "DeviceName"
    },
    "PlatformName": {
      "fullType": "PlatformName",
      "name": "PlatformName"
    },
    "PlatformVersion": {
      "fullType": "PlatformVersion",
      "name": "PlatformVersion"
    }
  }
}